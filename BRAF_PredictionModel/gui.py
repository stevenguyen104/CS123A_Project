import tkinter as tk
from tkinter import messagebox, scrolledtext, PhotoImage
from PIL import Image, ImageTk
import subprocess
import os

# Setting correct dir
script_dir = os.path.dirname(os.path.abspath(__file__))
os.chdir(script_dir)  

def write_smiles_to_file(smiles):
    try:
        with open("example.txt", "w") as file:
            file.write(smiles)
        messagebox.showinfo("Success", "SMILES string written to example.txt")
    except Exception as e:
        messagebox.showerror("Error", f"Failed to write: {e}")

def run_jupyter_notebook():
    try:
        # Get the cwd
        current_directory = os.getcwd()
        print(f"Current directory: {current_directory}")
        # Setting path
        notebook_path = os.path.join(current_directory, "PredictionModel.ipynb")

        # Check if exists
        if os.path.exists(notebook_path):
            print(f"Notebook found: {notebook_path}")
        else:
            print(f"Notebook not found at: {notebook_path}")

        # Run notebook
        try:
            subprocess.run(["python", "-m", "jupyter", "nbconvert", "--execute", "--to", "notebook", "--inplace", notebook_path], check=True, capture_output=True, text=True)
        except subprocess.CalledProcessError as e:
            print(f"Error running notebook: {e}")

        # Check if output saved
        output_file_path = os.path.join(script_dir, "output.txt")
        if os.path.exists(output_file_path):
            with open(output_file_path, 'r') as output_file:
                output = output_file.read()
                show_output(output)
                messagebox.showinfo("Success", "Notebook output saved successfully.")
        else:
            messagebox.showwarning("Warning", "No output file generated by notebook.")

        # Check if heatmap saved
        if os.path.exists('heatmap.png'):
            messagebox.showinfo("Success", "Notebook successful, heatmap saved.")
            display_heatmap()
        else:
            messagebox.showwarning("Warning", "Heatmap not found.")
    except subprocess.CalledProcessError as e:
        messagebox.showerror("Error", f"Failed to execute notebook: {e}")

def show_output(output):
    # Create a new window to display the output from the notebook
    output_window = tk.Toplevel()
    output_window.title("Notebook Output")

    # Create a scrollable text widget to display the output
    text_widget = scrolledtext.ScrolledText(output_window, wrap=tk.WORD, width=80, height=20)
    text_widget.pack(padx=10, pady=10)

    # Insert the notebook output into the text widget
    text_widget.insert(tk.END, output)

    # Make the text widget read-only
    text_widget.config(state=tk.DISABLED)

def display_heatmap():
    # Window for heatmap
    heatmap_window = tk.Toplevel()
    heatmap_window.title("Generated Heatmap")
    
    try:
        # Open img with PIL
        image = Image.open('heatmap.png')
        image = image.resize((600, 600))  # Resize the image to fit in the window
        photo = ImageTk.PhotoImage(image)

        label = tk.Label(heatmap_window, image=photo)
        label.image = photo
        label.pack()

        # Run heatmap window loop
        heatmap_window.mainloop()
    except Exception as e:
        messagebox.showerror("Error", f"Failed to load heatmap: {e}")

def on_submit():
    smiles = smiles_entry.get()
    if not smiles:
        messagebox.showwarning("Input Error", "Please enter a valid SMILES string.")
    else:
        write_smiles_to_file(smiles)
        run_jupyter_notebook()

# Main window
root = tk.Tk()
root.title("SMILES Input")

# SMILES input
smiles_label = tk.Label(root, text="Enter SMILES string:")
smiles_label.pack(pady=5)

smiles_entry = tk.Entry(root, width=50)
smiles_entry.pack(pady=5)

# Submit button
submit_button = tk.Button(root, text="Submit", command=on_submit)
submit_button.pack(pady=10)

# GUI loop
root.mainloop()
